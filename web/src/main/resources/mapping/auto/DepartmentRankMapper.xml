<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cycredit.dao.mapper.DepartmentRankMapper">
  <resultMap id="BaseResultMap" type="com.cycredit.dao.entity.DepartmentRank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="join_count" jdbcType="INTEGER" property="joinCount" />
    <result column="uni_count" jdbcType="INTEGER" property="uniCount" />
    <result column="uni_punish_count" jdbcType="INTEGER" property="uniPunishCount" />
    <result column="uni_bonus_count" jdbcType="INTEGER" property="uniBonusCount" />
    <result column="select_count" jdbcType="INTEGER" property="selectCount" />
    <result column="active_count" jdbcType="INTEGER" property="activeCount" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, department_code, department_name, rank, join_count, uni_count, uni_punish_count, 
    uni_bonus_count, select_count, active_count, update_time
  </sql>
  <select id="selectByExample" parameterType="com.cycredit.dao.entity.DepartmentRankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from department_rank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department_rank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department_rank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cycredit.dao.entity.DepartmentRankExample">
    delete from department_rank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cycredit.dao.entity.DepartmentRank">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department_rank (department_code, department_name, rank, 
      join_count, uni_count, uni_punish_count, 
      uni_bonus_count, select_count, active_count, 
      update_time)
    values (#{departmentCode,jdbcType=VARCHAR}, #{departmentName,jdbcType=VARCHAR}, #{rank,jdbcType=INTEGER}, 
      #{joinCount,jdbcType=INTEGER}, #{uniCount,jdbcType=INTEGER}, #{uniPunishCount,jdbcType=INTEGER}, 
      #{uniBonusCount,jdbcType=INTEGER}, #{selectCount,jdbcType=INTEGER}, #{activeCount,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cycredit.dao.entity.DepartmentRank">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department_rank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentCode != null">
        department_code,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="joinCount != null">
        join_count,
      </if>
      <if test="uniCount != null">
        uni_count,
      </if>
      <if test="uniPunishCount != null">
        uni_punish_count,
      </if>
      <if test="uniBonusCount != null">
        uni_bonus_count,
      </if>
      <if test="selectCount != null">
        select_count,
      </if>
      <if test="activeCount != null">
        active_count,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentCode != null">
        #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="joinCount != null">
        #{joinCount,jdbcType=INTEGER},
      </if>
      <if test="uniCount != null">
        #{uniCount,jdbcType=INTEGER},
      </if>
      <if test="uniPunishCount != null">
        #{uniPunishCount,jdbcType=INTEGER},
      </if>
      <if test="uniBonusCount != null">
        #{uniBonusCount,jdbcType=INTEGER},
      </if>
      <if test="selectCount != null">
        #{selectCount,jdbcType=INTEGER},
      </if>
      <if test="activeCount != null">
        #{activeCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cycredit.dao.entity.DepartmentRankExample" resultType="java.lang.Long">
    select count(*) from department_rank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update department_rank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.departmentCode != null">
        department_code = #{record.departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.joinCount != null">
        join_count = #{record.joinCount,jdbcType=INTEGER},
      </if>
      <if test="record.uniCount != null">
        uni_count = #{record.uniCount,jdbcType=INTEGER},
      </if>
      <if test="record.uniPunishCount != null">
        uni_punish_count = #{record.uniPunishCount,jdbcType=INTEGER},
      </if>
      <if test="record.uniBonusCount != null">
        uni_bonus_count = #{record.uniBonusCount,jdbcType=INTEGER},
      </if>
      <if test="record.selectCount != null">
        select_count = #{record.selectCount,jdbcType=INTEGER},
      </if>
      <if test="record.activeCount != null">
        active_count = #{record.activeCount,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update department_rank
    set id = #{record.id,jdbcType=INTEGER},
      department_code = #{record.departmentCode,jdbcType=VARCHAR},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=INTEGER},
      join_count = #{record.joinCount,jdbcType=INTEGER},
      uni_count = #{record.uniCount,jdbcType=INTEGER},
      uni_punish_count = #{record.uniPunishCount,jdbcType=INTEGER},
      uni_bonus_count = #{record.uniBonusCount,jdbcType=INTEGER},
      select_count = #{record.selectCount,jdbcType=INTEGER},
      active_count = #{record.activeCount,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cycredit.dao.entity.DepartmentRank">
    update department_rank
    <set>
      <if test="departmentCode != null">
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="joinCount != null">
        join_count = #{joinCount,jdbcType=INTEGER},
      </if>
      <if test="uniCount != null">
        uni_count = #{uniCount,jdbcType=INTEGER},
      </if>
      <if test="uniPunishCount != null">
        uni_punish_count = #{uniPunishCount,jdbcType=INTEGER},
      </if>
      <if test="uniBonusCount != null">
        uni_bonus_count = #{uniBonusCount,jdbcType=INTEGER},
      </if>
      <if test="selectCount != null">
        select_count = #{selectCount,jdbcType=INTEGER},
      </if>
      <if test="activeCount != null">
        active_count = #{activeCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cycredit.dao.entity.DepartmentRank">
    update department_rank
    set department_code = #{departmentCode,jdbcType=VARCHAR},
      department_name = #{departmentName,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=INTEGER},
      join_count = #{joinCount,jdbcType=INTEGER},
      uni_count = #{uniCount,jdbcType=INTEGER},
      uni_punish_count = #{uniPunishCount,jdbcType=INTEGER},
      uni_bonus_count = #{uniBonusCount,jdbcType=INTEGER},
      select_count = #{selectCount,jdbcType=INTEGER},
      active_count = #{activeCount,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>